    Option Explicit
    Public fpath As String, fName As String, fwbk As Workbook, dateRng As Date, wsname As String, wsn As Integer, WbkName As String, NewWS As Worksheet, ShtNo As Integer, sht As Worksheet
    
Private Sub BtnAddDate_Click()

Dim wb As Workbook
Dim myPath As String
Dim myFile As String
Dim myExtension As String
Dim FldrPicker As FileDialog
Dim InstID As String
Dim InstDate As Date
Dim InstBR As String

'Optimize Macro Speed
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  Application.Calculation = xlCalculationManual

'Retrieve Target Folder Path From User
  Set FldrPicker = Application.FileDialog(msoFileDialogFolderPicker)

    With FldrPicker
      .Title = "Select A Target Folder"
      .AllowMultiSelect = False
        If .Show <> -1 Then GoTo NextCode
        myPath = .SelectedItems(1) & "\"
    End With

'In Case of Cancel
NextCode:
  myPath = myPath
  If myPath = "" Then GoTo ResetSettings

'Target File Extension (must include wildcard "*")
  myExtension = "*.xl*"

'Target Path with Ending Extention
  myFile = Dir(myPath & myExtension)

'Loop through each Excel file in folder
  Do While myFile <> ""
    'Set variable equal to opened workbook
      Set wb = Workbooks.Open(Filename:=myPath & myFile)
    
    'Ensure Workbook has opened before moving on to next line of code
      DoEvents
        
    Dim FDate As String, fName As String

        fName = Left(ActiveWorkbook.Name, (InStrRev(ActiveWorkbook.Name, ".", -1, vbTextCompare) - 1))
                  
        FDate = TbDate.Value
        
        FDate = Format(FDate, "YYYYMMDD")
        
        ActiveWorkbook.SaveAs myPath & fName & "-" & FDate, FileFormat:=xlOpenXMLWorkbookMacroEnabled
    
    
    'Save and Close Workbook
      wb.Close SaveChanges:=True
      
    'Ensure Workbook has closed before moving on to next line of code
      DoEvents

    'Get next file name
      myFile = Dir
  Loop

'Message Box when tasks are completed
  MsgBox "Task Complete!"

ResetSettings:
  'Reset Macro Optimization Settings
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True

End Sub

    Private Sub BtnCloseNSave_Click()
    Workbooks(ListBoxW.Value).Close SaveChanges:=True
    End Sub
    
    Private Sub BtnCloseWoSaving_Click()
    
    Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    
    Private Sub BtnCombGWSdataTEMS_Click()
    
        Call OpenWorkbook
        
        Call CombGWSdataTEMS
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnCombGWVdataTEMS_Click()
    
        Call OpenWorkbook
        
        Call CombGWVdataTEMS
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnCombMXTEMS_Click()
        
        Call OpenWorkbook
        
        Call CombMXdataTEMS
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
        
    End Sub

Private Sub BtnDeleteAll_Click()
    Sheets("GWV").Select
    Range("B5:F5").Select
    Selection.ClearContents
    Range("F30").Select
    Selection.End(xlUp).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("K6").Select
    Range(Selection, Selection.End(xlToRight)).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Sheets("MX").Select
    Range("B5:F5").Select
    Selection.ClearContents
    Range("F6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("J1048576:AB1048576").Select
    Range(Selection, Selection.End(xlUp)).Select
    Range("J6:AB1048576").Select
    Range("J1048576").Activate
    Selection.ClearContents
    Selection.ClearContents
    Selection.ClearContents
    Sheets("GWS").Select
    Range("B5:F5").Select
    Selection.ClearContents
    Range("E6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("J6:AA6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("K1048569").Select
    Selection.End(xlUp).Select
    Range("K6").Select
    Sheets("TM").Select
    Range(Selection, Selection.End(xlUp)).Select
    Range("F6:F51").Select
    Range("F51").Activate
    Selection.ClearContents
    Range("B5:F5").Select
    Selection.ClearContents
    Range("K6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("L1048566").Select
    Selection.End(xlUp).Select
    Range("M5:N5").Select
    Selection.ClearContents
    Sheets("L").Select
    Selection.End(xlUp).Select
    Range("J6").Select
    Sheets("I").Select
    Range("E6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("J1048571").Select
    Selection.End(xlUp).Select
    Range("J6").Select
    Sheets("L").Select
    Range("D6:AA6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents
    Range("G6").Select
End Sub

Private Sub BtnDelimitSpace_Click()

Dim wb As Workbook
Dim myPath As String
Dim myFile As String
Dim myExtension As String
Dim FldrPicker As FileDialog
Dim InstID As String
Dim InstDate As Date
Dim InstBR As String

      


'Optimize Macro Speed
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  Application.Calculation = xlCalculationManual

'Retrieve Target Folder Path From User
  Set FldrPicker = Application.FileDialog(msoFileDialogFolderPicker)

    With FldrPicker
      .Title = "Select A Target Folder"
      .AllowMultiSelect = False
        If .Show <> -1 Then GoTo NextCode
        myPath = .SelectedItems(1) & "\"
    End With

'In Case of Cancel
NextCode:
  myPath = myPath
  If myPath = "" Then GoTo ResetSettings

'Target File Extension (must include wildcard "*")
  myExtension = "*.csv*"

'Target Path with Ending Extention
  myFile = Dir(myPath & myExtension)

'Loop through each Excel file in folder
  Do While myFile <> ""
    'Set variable equal to opened workbook
      Set wb = Workbooks.Open(Filename:=myPath & myFile)
    
    'Ensure Workbook has opened before moving on to next line of code
      DoEvents
        
    Columns("A:A").Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
    TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=True, _
    Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
    :=Array(1, 1), TrailingMinusNumbers:=True
    
    
    'Save and Close Workbook
      wb.Close SaveChanges:=True
      
    'Ensure Workbook has closed before moving on to next line of code
      DoEvents

    'Get next file name
      myFile = Dir
  Loop

'Message Box when tasks are completed
  MsgBox "Task Complete!"

ResetSettings:
  'Reset Macro Optimization Settings
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True

End Sub

    Private Sub BtnLUGraphNumber_Click()
        
        Call OpenWorkbook
        
        Call LUGraphNumLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    
    Private Sub BtnLURawNumber_Click()
    
        Call OpenWorkbook
        
        Call LURawNumLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    
    Private Sub BtnLURawText_Click()
        
        Call OpenWorkbook
    
        Call LURawTextLookUp
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnNewWB_Click()
        
        Dim Count As Integer, i As Integer, j As Integer
        Count = 0
        For i = 0 To lbShtSelection.ListCount - 1
            'check if the row is selected and add to count
            If lbShtSelection.Selected(i) Then Count = Count + 1
        Next i
        For i = 0 To lbShtSelection.ListCount - 1
            If lbShtSelection.Selected(i) Then Sheets(lbShtSelection.List(i)).Select True
            
        Next i
        
        For i = 0 To lbShtSelection.ListCount - 1
        If lbShtSelection.Selected(i) Then Sheets(lbShtSelection.List(i)).Select False
        If lbShtSelection.Selected(i) Then Sheets(lbShtSelection.List(i)).Activate
        Next i
        Unload Me
        ActiveWindow.SelectedSheets.Copy
             
        For Each NewWS In ActiveWorkbook.Worksheets
                NewWS.Cells.Copy
                NewWS.[A1].PasteSpecial Paste:=xlValues
                NewWS.Cells.Hyperlinks.Delete
                Application.CutCopyMode = False
                Cells(1, 1).Select
                NewWS.Activate
            Next NewWS
            Cells(1, 1).Select
             
             '       Remove named ranges
            
             '       Input box to name new file
            WbkName = InputBox("Please Specify the name of your new workbook", "New Copy")
             
             '       Save it with the WbkName and in the same directory as original
            ActiveWorkbook.SaveCopyAs ThisWorkbook.Path & "\" & WbkName & ".xlsx"
          
            ThisWorkbook.Close SaveChanges:=False
        
    End Sub

    Private Sub BtnOpen_Click()

    Application.ScreenUpdating = False
    Set fwbk = Workbooks.Open(fpath & Me.ListBoxW.Value)
    Me.LBWbkDisplay.Clear
    For Each sht In ActiveWorkbook.Sheets
    With Me.LBWbkDisplay
    .AddItem sht.Name
    End With
    Next sht
    Application.ScreenUpdating = True
 
    
    End Sub
    Private Sub BtnCombGWVmosExtractor_Click()
    
            Call OpenWorkbook
            
            Call CombGWVdataMissionOSLU
            
            Call OnBackEverything
            
            Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    
    Private Sub BtnComdGWSmosExtractor_Click()
    
            Call OpenWorkbook
            
            Call CombGWSdataMissionOSLU
            
            Call OnBackEverything
            
            Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnMXdataMissionOS_Click()
    
        Call OpenWorkbook
        
        Call CombMXdataMissionOSLU
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    Private Sub BtnDailyLBLGGraph1No_Click()
    
        Call OpenWorkbook
        
        Call LBLGTEMSGraph1
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnDailyLBLGGraph2No_Click()
        Call OpenWorkbook
        
        Call LBLGTEMSGraph2
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    End Sub

    Private Sub BtnDailyLBLGRawNo_Click()
    
        Call OpenWorkbook
        
        Call LBLGNumberLookup
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnDailyLBLGRawText_Click()
    
        Call OpenWorkbook
    
        Call LBandLGRawTextLookup
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub

    Private Sub BtnExtractWeeklyLBLGGraph1No_Click()
        Call OpenWorkbook
        
        Call LBLGTEMSGraph1
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    End Sub
    
    Private Sub BtnExtractWeeklyLBLGGraph2No_Click()
    
        Call OpenWorkbook
        
        Call LBLGTEMSGraph2
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    End Sub
    
    Private Sub BtnExtractWeeklyLBLGRawText_Click()
    
        Call OpenWorkbook
    
        Call LBandLGRawTextLookup
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
      
    End Sub
    
    Private Sub BtnExtractWeeklyLBLGRawNo_Click()
    
        Call OpenWorkbook
        
        Call LBLGNumberLookup
        
        Call OnBackEverything
          
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    
Private Sub BtnPrepUpload_Click()

    Dim lrow As Integer

    'GWV
    Sheets("GWV").Select
    Range("D5:F5,J5:K5,M5:AB5").Select
    Range("M5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AD:AP").Select
    Selection.Delete Shift:=xlToLeft
    
    'GWS
    Sheets("GWS").Select
    Range("D5:F5,J5:K5,M5:AA5").Select
    Range("M5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AA6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AC:AT").Select
    Selection.Delete Shift:=xlToLeft
    
    'MX
    Sheets("MX").Select
    Range("D5:F5,J5:K5,M5:AB5").Select
    Range("M5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AD:AT").Select
    Selection.Delete Shift:=xlToLeft
    
    'TM
    Sheets("TM").Select
    Range("D5:F5,M5:N5").Select
    Range("M5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    Columns("AD:AX").Select
    Selection.Delete Shift:=xlToLeft
    
    'LB & LG
    Sheets("L").Select
    Range("D5:F5,J5").Select
    Range("J5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AA6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AC:AT").Select
    Selection.Delete Shift:=xlToLeft
    
    'Inclino
    Sheets("I").Select
    Range("M5:P5").Select
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AB6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AC:AT").Select
    Selection.Delete Shift:=xlToLeft
    
    'VM
    Sheets("VM").Select
    Range("AA17,D5:F5,AA5").Select
    Range("AA5").Activate
    Selection.ClearContents
    lrow = Cells(Rows.Count, 11).End(xlUp).Row
    lrow = lrow + 1
    Rows(lrow).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Delete Shift:=xlUp
    Range("D6:AE6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("AF:AJ").Select
    Selection.Delete Shift:=xlToLeft

End Sub

    Private Sub BtnSortLBLGDaily_Click()
    
        Call SortLBLG
    
    End Sub
    
    Private Sub BtnSortLBLGWeekly_Click()
    
        Call SortLBLG
    
    End Sub

    Private Sub BtnTEMSExtractMX_Click()
        Call OpenWorkbook
        
        Call MXTEMSDateLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
        
            Sheets("MX").Select
    Range("F6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="-IE", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    End Sub
        


Private Sub BtnTEMSInclino_Click()

'PURPOSE: To loop through all Excel files in a user specified folder and perform a set task on them
'SOURCE: www.TheSpreadsheetGuru.com

Dim wb As Workbook
Dim myPath As String
Dim myFile As String
Dim myExtension As String
Dim FldrPicker As FileDialog


'Optimize Macro Speed
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  Application.Calculation = xlCalculationManual

'Retrieve Target Folder Path From User
  Set FldrPicker = Application.FileDialog(msoFileDialogFolderPicker)

    With FldrPicker
      .Title = "Select A Target Folder"
      .AllowMultiSelect = False
        If .Show <> -1 Then GoTo NextCode
        myPath = .SelectedItems(1) & "\"
    End With

'In Case of Cancel
NextCode:
  myPath = myPath
  If myPath = "" Then GoTo ResetSettings

'Target File Extension (must include wildcard "*")
  myExtension = "*.xls*"

'Target Path with Ending Extention
  myFile = Dir(myPath & myExtension)

'Loop through each Excel file in folder
  Do While myFile <> ""
    'Set variable equal to opened workbook
      Set wb = Workbooks.Open(Filename:=myPath & myFile)
    
    'Ensure Workbook has opened before moving on to next line of code
      DoEvents
        
        
    Worksheets("Data").Activate
    'Variable Declarations
    Dim IEDepth As Double, DDiv As Double, NoRow As Integer, Irow As Integer, LR As Range, LR2 As Range
    Dim IName As String, IDate As Date, rng1 As Range, rng2 As Range
    IEDepth = Worksheets("Data").Range("D9")
    IName = Worksheets("Data").Range("D11")
    IDate = Worksheets("Data").Range("O11")
    'Copy range of each workbook from specified range
    Set rng1 = Range(Range("B15:E15"), Range("B15:E15").End(xlDown))
    Set rng2 = Range(Range("N15:O15"), Range("N15:O15").End(xlDown))
    
    'Paste & offset, Change ("I (2)") accordingly
    Set LR = ThisWorkbook.Worksheets("I").Cells(ThisWorkbook.Worksheets("I").Rows.Count, "M").End(xlUp)
    LR.Offset(1, 0).Resize(rng1.Rows.Count, rng1.Columns.Count).Value = rng1.Value
    Set LR2 = ThisWorkbook.Worksheets("I").Cells(ThisWorkbook.Worksheets("I").Rows.Count, "AA").End(xlUp)
    LR2.Offset(1, 0).Resize(rng2.Rows.Count, rng2.Columns.Count).Value = rng2.Value
    
    
    DDiv = 0.5
    NoRow = IEDepth / DDiv
    ThisWorkbook.Activate
    'Worksheet(X) accordingly
    Worksheets("I").Activate
    
    'Loop only perform once
    Do Until Irow = NoRow
    'LR.Offset(1, 0).Value = DDiv
    Sheet16.Range("F1048576").End(xlUp).Offset(1, 0).Value = DDiv
    Sheet16.Range("G1048576").End(xlUp).Offset(1, 0).Value = DDiv
    Sheet16.Range("E1048576").End(xlUp).Offset(1, 0).Value = IName
    Sheet16.Range("K1048576").End(xlUp).Offset(1, 0).Value = IDate
    DDiv = DDiv + 0.5
    Irow = Irow + 1
    Loop
    'Clear variables
    Irow = 0
    DDiv = 0
    NoRow = 0
    IEDepth = 0
    NoRow = 0
    
    
    
    'Save and Close Workbook
      wb.Close SaveChanges:=True
      
    'Ensure Workbook has closed before moving on to next line of code
      DoEvents

    'Get next file name
      myFile = Dir
  Loop

'Message Box when tasks are completed
 

    Application.DisplayAlerts = False
    Sheet16.Range("E6").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="IN-IE", Replacement:="IS", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Sheet16.Range("E9485").Select
    Selection.End(xlUp).Select
    Application.DisplayAlerts = True
 MsgBox "Task Complete!"

ResetSettings:
  'Reset Macro Optimization Settings
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True

End Sub

Private Sub BtnVMTEMSpg1_Click()
        
        Call OpenWorkbook
        
        Call VMpg2TemsLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False

End Sub

Private Sub BtnVMTEMSpg2_Click()
        Call OpenWorkbook
        
        Call VMpg2TemsLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False

End Sub

    Private Sub GWSTEMSExtract_Click()
        Call OpenWorkbook
        
        Call GWSTEMSDateLookup
        
        Call OnBackEverything
        
      Workbooks(ListBoxW.Value).Close SaveChanges:=False
    End Sub
    Private Sub GWVTEMSExtract_Click()
        Call OpenWorkbook
        
        Call GWVTEMSDateLookup
    
        Call OnBackEverything
        
       Workbooks(ListBoxW.Value).Close SaveChanges:=False
    End Sub


Private Sub ListBoxW_Click()

End Sub

Private Sub PDFAdd_Click()

    With Me.LBWbkPDF
    .AddItem LBWbkDisplay.Value
    End With
'MsgBox (Me.LBWbkDisplay.Value)

End Sub

Private Sub PDFMinus_Click()

    With Me.LBWbkPDF
    .RemoveItem LBWbkPDF.ListIndex
    End With


End Sub

Private Sub TbDate_Change()

End Sub

Private Sub TestCodeBtn_Click()
MultiPage2.Value = 6
End Sub

    Private Sub TMTEMSExtract_Click()
    
        Call OpenWorkbook
        
        Call TMTEMSDateLookup
        
        Call OnBackEverything
        
        Workbooks(ListBoxW.Value).Close SaveChanges:=False
    
    End Sub
    Private Sub BtnDeleteDailyLBLG_Click()
        Call DeleteLBLG
    End Sub
    
    Private Sub BtnDeleteLbLGWeekly_Click()
        Call DeleteLBLG
    End Sub
    
    Function DateFormat() As String
        Select Case Application.International(xlDateOrder)
            Case 0: DateFormat = "mm/dd/yyyy"
            Case 1: DateFormat = "dd/mm/yyyy"
            Case 2: DateFormat = "yyyy/mm/dd"
        End Select
    End Function
    Private Sub DeleteLBLG()
        Range("A3:F3").Select
        Range(Selection, Selection.End(xlDown)).Select
        Selection.ClearContents
    End Sub
    
    Sub LBWorkbookSheetsTake()
    Dim LBWbsht As Worksheet
        For Each LBWbsht In Workbooks(ListBoxW.Value).Worksheets
            LBWorkbookSheets.AddItem (LBWbsht.Name)
        Next LBWbsht
    End Sub
    Private Sub MultiPage2_Click(ByVal Index As Long)
    Dim fileList() As String
        Dim i As Integer
        'define the directory to be searched for files
    '    MsgBox Me.MultiPage2.SelectedItem.Caption
        Select Case Me.MultiPage2.SelectedItem.Caption
            
        Case "MX"
        fpath = "C:\Users\Tyler\Dropbox\T312\1.MX\"
        Case "GWS"
        fpath = "C:\Users\Tyler\Dropbox\T312\2.Water Standpipe\"
        Case "GWV"
        fpath = "C:\Users\Tyler\Dropbox\T312\3.Vibrating Wire Piezometer\"
        Case "LB and LG"
        fpath = "C:\Users\Tyler\Dropbox\T312\6.LB and LG\"
        Case "TM"
        fpath = "C:\Users\Tyler\Dropbox\T312\7.TM\"
        Case "VM"
        fpath = "C:\Users\Tyler\Dropbox\T312\8.VM\" 'C:\Users\Tyler\Dropbox\T312\8.VM\
        Case "LU"
        fpath = "C:\Users\Tyler\Dropbox\T312\10.Utilities\"
        Case "DailyLBLG"
        fpath = "C:\Users\Tyler\Dropbox\T312\5.Daily monitoring\"
        Case "Combined Files"
        fpath = "C:\Users\Tyler\Dropbox\T312\4.Combined Instrument File\"

        End Select
        On Error Resume Next
        'build a list of the files
        fName = Dir(fpath & "*.xls")
        While fName <> ""
            'add fName to the list
            i = i + 1
            ReDim Preserve fileList(1 To i)
            fileList(i) = fName
            'get next filename
            fName = Dir()
        Wend
        'see if any files were found
        If i = 0 Then
            MsgBox "No files found"
            Exit Sub
        End If
        'cycle through the list and add to listbox
        Me.ListBoxW.Clear
           
        For i = 1 To UBound(fileList)
        Me.ListBoxW.AddItem fileList(i)
    
        Next
        
    End Sub
        
    
    Private Sub OnBackEverything()
    
        Application.Calculation = xlCalculationAutomatic
        
        Application.ScreenUpdating = True
        
        Application.DisplayStatusBar = True
        
        Application.EnableEvents = True
    
    End Sub
    
    Public Sub OpenWorkbook()
    
        Application.Calculation = xlCalculationManual
        
        Application.ScreenUpdating = False
        
        Application.DisplayStatusBar = False
        
        Application.EnableEvents = False
        
    
    Set fwbk = Workbooks.Open(fpath & Me.ListBoxW.Value)
        
        Dim str_DateRng As String
        str_DateRng = TbDate.Value
        If IsDate(str_DateRng) Then
            dateRng = CDate(str_DateRng)
            Else
            MsgBox "Wrong date format"
            Exit Sub
        End If
    
    End Sub
    Private Sub VMpg2TemsLookup()
    'CoSheet In Workbooks(ListBoxW.Value).Worksheets
    Dim SrcC As Integer, CoBook As Workbook, lrow As Integer, Slr As Integer, CoSheet As Worksheet, Raw As String, RDa() As String, RTa() As String, FDate As Date, FTime As Date
    Dim TVL As Range, VAL As Double
    Set CoBook = ActiveWorkbook
'    MsgBox (CoBook.Name)
    lrow = CoBook.Sheets(2).Cells(Rows.Count, 1).End(xlUp).Row
    CoBook.Sheets(2).Activate
    For SrcC = 3 To lrow
        If CoBook.Sheets(2).Cells(SrcC, 1) >= dateRng Then
        Raw = CoBook.Sheets(2).Cells(SrcC, 1)
        Slr = Sheet5.Cells(Rows.Count, 11).End(xlUp).Row + 1
        Raw = Len(Cells(SrcC, 1))
            If Raw < 11 Then
            Raw = Cells(SrcC, 1)
            RDa() = Split(Raw, "/")
            RDa(2) = Left(RDa(2), 4)
            FDate = DateSerial(RDa(2), RDa(1), RDa(0))
            FTime = TimeSerial(0, 0, 0)
            'ID
            Sheet5.Cells(Slr, 6).Value = CoBook.Sheets(2).Cells(1, 1)
            'Date
            Sheet5.Cells(Slr, 11).Value = FDate
            'Time
            Sheet5.Cells(Slr, 12).Value = FTime
            'Tran
            Sheet5.Cells(Slr, 28).Value = CoBook.Sheets(2).Cells(SrcC, 2)
            'Vert
            Sheet5.Cells(Slr, 29).Value = CoBook.Sheets(2).Cells(SrcC, 3)
            'Long
            Sheet5.Cells(Slr, 30).Value = CoBook.Sheets(2).Cells(SrcC, 4)
            'PVS
            Sheet5.Cells(Slr, 31).Value = CoBook.Sheets(2).Cells(SrcC, 5)
            'Trigger Sensor
            Set TVL = Sheet5.Range("AB" & Slr & ":" & "AD" & Slr)
            VAL = Application.WorksheetFunction.Max(TVL)
            Sheet5.Cells(Slr, 27).Value = Choose(Application.Match(VAL, TVL, 0), "TRAN", "VERT", "LONG")
'
'Slr = Sheet5.Cells(Rows.Count, 11).End(xlUp).Row
'For R = 7 To Slr
'
'Set TVL = Sheet5.Range("AB" & R & ":" & "AD" & R)
'VAL = Application.WorksheetFunction.Max(TVL)
'Cells(R, 27).Value = Choose(Application.Match(VAL, TVL, 0), "TRAN", "VERT", "LONG")





'            Dim TVL As Range, Val As Integer
'            For R = 7 To 9
'
'            Set TVL = Sheet5.Range("AB" & R & ":" & "AD" & R)
'            Val = Application.WorksheetFunction.Max(TVL)
'            Cells(R, 27).Value = Choose(Application.Match(Val, Sheet5.Range("AB" & R & ":" & "AD" & R), 0), "TRAN", "VERT", "LONG")
'
'
'
'            Next R
'            End Sub
            
            Else
            
            Raw = Cells(SrcC, 1)
            RDa() = Split(Raw, "/")
            RDa(2) = Left(RDa(2), 4)
            FDate = DateSerial(RDa(2), RDa(1), RDa(0))
            
            RTa() = Split(Raw, ":")
            RTa(0) = Right(RTa(0), 2)
            FTime = TimeSerial(RTa(0), RTa(1), RTa(2))
            
            'ID
            Sheet5.Cells(Slr, 6).Value = CoBook.Sheets(2).Cells(1, 1)
            'Date
            Sheet5.Cells(Slr, 11).Value = FDate
            'Time
            Sheet5.Cells(Slr, 12).Value = FTime
            'Tran
            Sheet5.Cells(Slr, 28).Value = CoBook.Sheets(2).Cells(SrcC, 2)
            'Vert
            Sheet5.Cells(Slr, 29).Value = CoBook.Sheets(2).Cells(SrcC, 3)
            'Long
            Sheet5.Cells(Slr, 30).Value = CoBook.Sheets(2).Cells(SrcC, 4)
            'PVS
            Sheet5.Cells(Slr, 31).Value = CoBook.Sheets(2).Cells(SrcC, 5)
            'Trigger Sensor
'            Set TVL = Sheet5.Range("AB" & Slr & ":" & "AD" & Slr)
'            VAL = Application.WorksheetFunction.Max(TVL)
'            Cells(Slr, 27).Value = Choose(Application.Match(VAL, TVL, 0), "TRAN", "VERT", "LONG")

            
            End If
        
        End If
    Next SrcC
    Dim R As Integer
    
    Slr = Sheet5.Cells(Rows.Count, 11).End(xlUp).Row
        For R = 6 To Slr
            Set TVL = Sheet5.Range("AB" & R & ":" & "AD" & R)
            VAL = Application.WorksheetFunction.Max(TVL)
            Cells(R, 27).Value = Choose(Application.Match(VAL, TVL, 0), "TRAN", "VERT", "LONG")
        Next R
    End Sub
    Private Sub CombMXdataMissionOSLU()
    
    Dim SrcFR As Integer, lrow As Integer
    Worksheets("MX").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 67 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
                        
            'Spider 1
            Sheet11.Range("A1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 1) & "-1"
            Sheet11.Range("B1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 2) & " " & Cells(SrcFR, 3)
            Sheet11.Range("C1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 4)
            Sheet11.Range("D1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 5)
            'Spider 2
            Sheet11.Range("A1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 1) & "-2"
            Sheet11.Range("B1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 2) & " " & Cells(SrcFR, 3)
            Sheet11.Range("C1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 4)
            Sheet11.Range("D1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 8)
            'Spider 3
            Sheet11.Range("A1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 1) & "-3"
            Sheet11.Range("B1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 2) & " " & Cells(SrcFR, 3)
            Sheet11.Range("C1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 4)
            Sheet11.Range("D1048573").End(xlUp).Offset(1, 0).Value = Cells(SrcFR, 11)

        End If
    Next SrcFR
    End Sub
    Private Sub CombMXdataTEMS()
    
    Dim SrcFR As Integer, lrow As Integer, Shlrow As Integer
    Worksheets("MX").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 67 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
                        
            Slr = Sheet4.Cells(Rows.Count, 6).End(xlUp).Row + 1
            
            'Spider 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-1"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 5)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 6)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 7)
            'Sheet4.Cells(Slr, 12).Value = 0.583333333
            'Spider 2
            Slr = Slr + 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-2"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 8)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 9)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 10)
            'Sheet4.Cells(Slr, 12).Value = 0.583333333
            'Spider 3
            Slr = Slr + 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-3"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 11)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 12)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 13)
            'Sheet4.Cells(Slr, 12).Value = 0.583333333

        End If
    Next SrcFR
    End Sub
    
    Private Sub MXTEMSDateLookup()
    
    Dim SrcC As Integer, CoSheet As Worksheet, lrow As Integer, Slr As Integer
    For Each CoSheet In Workbooks(ListBoxW.Value).Worksheets
    Workbooks(ListBoxW.Value).Worksheets(CoSheet.Name).Activate
    lrow = Cells(Rows.Count, 2).End(xlUp).Row
    
    For SrcC = 130 To lrow
        'C =row number 2 = Column B
        If Cells(SrcC, 2) >= dateRng Then
            Slr = Sheet4.Cells(Rows.Count, 6).End(xlUp).Row + 1
            
            'Spider 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-1"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 5)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 6)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 7)
            Sheet4.Cells(Slr, 12).Value = 0.583333333
            'Spider 2
            Slr = Slr + 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-2"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 8)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 9)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 10)
            Sheet4.Cells(Slr, 12).Value = 0.583333333
            'Spider 3
            Slr = Slr + 1
            Sheet4.Cells(Slr, 6).Value = CoSheet.Cells(1, 15) & "-3"
            Sheet4.Cells(Slr, 11).Value = CoSheet.Cells(SrcC, 2)
            Sheet4.Cells(Slr, 13).Value = CoSheet.Cells(SrcC, 4)
            Sheet4.Cells(Slr, 14).Value = CoSheet.Cells(SrcC, 11)
            Sheet4.Cells(Slr, 27).Value = CoSheet.Cells(SrcC, 12)
            Sheet4.Cells(Slr, 28).Value = CoSheet.Cells(SrcC, 13)
            Sheet4.Cells(Slr, 12).Value = 0.583333333

        End If
    Next SrcC
    Next CoSheet
    

    
    End Sub
    Private Sub CombGWSdataMissionOSLU()
    Dim SrcFR As Integer, lrow As Integer, Slr As Integer
    Worksheets("GWS").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 34 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
            
            Slr = Sheet2.Cells(Rows.Count, 1).End(xlUp).Row + 1


            Sheet2.Cells(Slr, 1).Value = Cells(SrcFR, 1)
            Sheet2.Cells(Slr, 2).Value = Cells(SrcFR, 2)
            Sheet2.Cells(Slr, 3).Value = Cells(SrcFR, 3)
            Sheet2.Cells(Slr, 4).Value = Cells(SrcFR, 4)

        End If
    Next SrcFR
    End Sub
    Private Sub CombGWSdataTEMS()
    Dim SrcFR As Integer, lrow As Integer, Shlrow As Integer
    Worksheets("GWS").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 34 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
            'New (:
            Shlrow = Sheet6.Cells(Rows.Count, 5).End(xlUp).Row + 1
            Sheet6.Cells(Shlrow, 5).Value = Cells(SrcFR, 1)
            Sheet6.Cells(Shlrow, 11).Value = Cells(SrcFR, 2)
            Sheet6.Cells(Shlrow, 13).Value = Cells(SrcFR, 3)
            Sheet6.Cells(Shlrow, 27).Value = Cells(SrcFR, 4)
            Sheet6.Cells(Shlrow, 12).Value = 0.583333333
        End If
    Next SrcFR
    End Sub
    
    Private Sub GWSTEMSDateLookup()
    
    Dim SrcFR As Integer, CoSheet As Worksheet, lrow As Integer, Shlrow As Integer
    
    For Each CoSheet In Workbooks(ListBoxW.Value).Worksheets 'source
    
    Workbooks(ListBoxW.Value).Worksheets(CoSheet.Name).Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 58 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 1) >= dateRng Then

            Shlrow = Sheet6.Cells(Rows.Count, 5).End(xlUp).Row + 1
            Sheet6.Cells(Shlrow, 5).Value = Cells(1, 8)
            Sheet6.Cells(Shlrow, 11).Value = Cells(SrcFR, 1)
            Sheet6.Cells(Shlrow, 13).Value = Cells(SrcFR, 6)
            Sheet6.Cells(Shlrow, 27).Value = Cells(SrcFR, 7)
            
           
        End If
    Next SrcFR
    Next CoSheet
    
    End Sub
    Private Sub CombGWVdataMissionOSLU()
    Dim SrcFR As Integer, lrow As Integer, Slr As Integer
    Worksheets("GWV").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 87 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
                        
            Slr = Sheet10.Cells(Rows.Count, 1).End(xlUp).Row + 1

            Sheet10.Cells(Slr, 1).Value = Cells(SrcFR, 1)
            Sheet10.Cells(Slr, 2).Value = Cells(SrcFR, 2) & " " & Cells(SrcFR, 3)
            Sheet10.Cells(Slr, 3).Value = Cells(SrcFR, 4)
            Sheet10.Cells(Slr, 4).Value = Cells(SrcFR, 5)
            
        End If
    Next SrcFR
    End Sub
    Private Sub CombGWVdataTEMS()
    Dim SrcFR As Integer, lrow As Integer, Slr As Integer
    Worksheets("GWV").Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 87 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 2) >= dateRng Then
            Slr = Sheet3.Cells(Rows.Count, 6).End(xlUp).Row + 1
            
            Sheet3.Cells(Slr, 6).Value = Cells(SrcFR, 1)
            Sheet3.Cells(Slr, 11).Value = Cells(SrcFR, 2)
            Sheet3.Cells(Slr, 13).Value = Cells(SrcFR, 4)
            Sheet3.Cells(Slr, 14).Value = Cells(SrcFR, 5)
            Sheet3.Cells(Slr, 27).Value = Cells(SrcFR, 10)
            Sheet3.Cells(Slr, 28).Value = Cells(SrcFR, 6)
            Sheet3.Cells(Slr, 12).Value = 0.583333333
            

        End If
    Next SrcFR
    End Sub
    
    
    Private Sub GWVTEMSDateLookup()
      
    Dim SrcC As Integer, CoSheet As Worksheet, lrow As Integer
    For Each CoSheet In Workbooks(ListBoxW.Value).Worksheets
    Workbooks(ListBoxW.Value).Worksheets(CoSheet.Name).Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcC = 64 To lrow
        'C =row number 2 = Column B
        If Cells(SrcC, 1) >= dateRng Then

            'Spider 1
            Sheet3.Range("F1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(1, 9)
            Sheet3.Range("K1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(SrcC, 1)
            Sheet3.Range("M1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(SrcC, 4)
            Sheet3.Range("N1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(SrcC, 5)
            Sheet3.Range("AA1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(SrcC, 11)
            Sheet3.Range("AB1048573").End(xlUp).Offset(1, 0).Value = CoSheet.Cells(SrcC, 6)
        End If
    Next SrcC
    Next CoSheet
    
    End Sub
    Private Sub TMTEMSDateLookup()
    
    Dim SrcFR As Integer, CoSheet As Worksheet, lrow As Integer, Slr As Integer
    For Each CoSheet In Workbooks(ListBoxW.Value).Worksheets
    Workbooks(ListBoxW.Value).Worksheets(CoSheet.Name).Activate
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    For SrcFR = 58 To lrow
        'C =row number 2 = Column B
        If Cells(SrcFR, 1) >= dateRng Then
            Slr = Sheet7.Cells(Rows.Count, 6).End(xlUp).Row + 1
            
            Sheet7.Cells(Slr, 6).Value = CoSheet.Cells(1, 10)
            Sheet7.Cells(Slr, 11).Value = CoSheet.Cells(SrcFR, 1)
            Sheet7.Cells(Slr, 13).Value = CoSheet.Cells(SrcFR, 5)
            Sheet7.Cells(Slr, 14).Value = CoSheet.Cells(SrcFR, 6)
            Sheet7.Cells(Slr, 27).Value = CoSheet.Cells(SrcFR, 7)
            Sheet7.Cells(Slr, 28).Value = CoSheet.Cells(SrcFR, 8)
            Sheet7.Cells(Slr, 10).Value = CoSheet.Cells(SrcFR, 11)
            Sheet7.Cells(Slr, 12).Value = 0.583333333

        End If
    Next SrcFR
    Next CoSheet

    End Sub
    

    
    Private Sub LBandLGRawTextLookup()
    
    
        Sheets("Raw Data").Activate
        Dim lrow As Integer, lCol As Integer, R As Integer, C As Integer

    
        'Find the last non-blank cell in column A(1)
        lrow = Cells(Rows.Count, 2).End(xlUp).Row
        
        'Find the last non-blank cell in row 1
        lCol = Cells(3, Columns.Count).End(xlToLeft).Column
    
         For R = 4 To lrow
         For C = 3 To lCol
         
            If Cells(3, C).Value >= dateRng Then
            
                If Application.WorksheetFunction.IsText(Cells(R, C).Value) = True Then
                'Application.WorksheetFunction.IsNumber
                'Application.WorksheetFunction.IsText(Cells(R, C).Value) = True
                'IsEmpty(Cells(R, C).Value) = False
                Sheet8.Range("D1048576").End(xlUp).Offset(1, 0).Value = "Existing BSM"
                Sheet8.Range("E1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                Sheet8.Range("F1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                Sheet8.Range("G1048576").End(xlUp).Offset(1, 0).Value = 0
                Sheet8.Range("K1048576").End(xlUp).Offset(1, 0).Value = Cells(3, C)
                Sheet8.Range("J1048576").End(xlUp).Offset(1, 0).Value = Cells(R, C)
                Sheet8.Range("L1048576").End(xlUp).Offset(1, 0).Value = 0.583333333
                
                'Sheet2.Range("C1048573").End(xlUp).Offset(1, 0).Value = Worksheets(I).Cells(c, 5)
                End If
            
            End If
            
          Next C
        Next R
    End Sub
    
    Private Sub LBLGNumberLookup()
    
    Sheets("Raw Data").Activate
    Dim lrow As Integer, lCol As Integer, R As Integer, C As Integer


    'Find the last non-blank cell in column A(1)
    lrow = Cells(Rows.Count, 2).End(xlUp).Row
    
    'Find the last non-blank cell in row 1
    lCol = Cells(3, Columns.Count).End(xlToLeft).Column

     For R = 4 To lrow
     For C = 3 To lCol
            If Cells(3, C).Value >= dateRng Then
                If Application.WorksheetFunction.IsNumber(Cells(R, C).Value) = True Then
               
                Sheet1.Range("A1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                Sheet1.Range("B1048576").End(xlUp).Offset(1, 0).Value = Cells(3, C)
                Sheet1.Range("C1048576").End(xlUp).Offset(1, 0).Value = Cells(R, C)
                
            End If
            End If
          Next C
        Next R
    End Sub
    Private Sub LBLGTEMSGraph1()
    
    Sheets("Graph data").Activate
    Dim lrow As Integer, lCol As Integer, RG As Integer, CG As Integer
    'Find the last non-blank cell in column A(1)
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    'Find the last non-blank cell in row 1
    lCol = Cells(1, Columns.Count).End(xlToLeft).Column
        'Area 2
        For RG = 2 To lrow
         For CG = 2 To lCol
            If Cells(RG, 1).Value >= dateRng Then
                
                If Application.WorksheetFunction.IsNumber(Cells(RG, CG).Value) = True Then
                'Application.WorksheetFunction.IsNumber
                'Application.WorksheetFunction.IsText(Cells(R, C).Value) = True
                'IsEmpty(Cells(R, C).Value) = False
                
                Sheet1.Range("D1048576").End(xlUp).Offset(1, 0).Value = Cells(1, CG)
                Sheet1.Range("E1048576").End(xlUp).Offset(1, 0).Value = Cells(RG, 1)
                Sheet1.Range("F1048576").End(xlUp).Offset(1, 0).Value = Cells(RG, CG)
                
                'Sheet2.Range("C1048573").End(xlUp).Offset(1, 0).Value = Worksheets(I).Cells(c, 5)
                End If
            End If
            
          Next CG
        Next RG
    End Sub
    
    Private Sub LBLGTEMSGraph2()
    
    Sheets("Graph data (2)").Activate
    
    Dim lrow As Integer, lCol As Integer, RG As Integer, CG As Integer
    'Find the last non-blank cell in column A(1)
    lrow = Cells(Rows.Count, 1).End(xlUp).Row
    
    'Find the last non-blank cell in row 1
    lCol = Cells(1, Columns.Count).End(xlToLeft).Column
        'Area 2
        For RG = 2 To lrow
         For CG = 2 To lCol
            
            If Cells(RG, 1).Value >= dateRng Then
                If Application.WorksheetFunction.IsNumber(Cells(RG, CG).Value) = True Then
                'Application.WorksheetFunction.IsNumber
                'Application.WorksheetFunction.IsText(Cells(R, C).Value) = True
                'IsEmpty(Cells(R, C).Value) = False
                
                Sheet1.Range("D1048576").End(xlUp).Offset(1, 0).Value = Cells(1, CG)
                
                Sheet1.Range("E1048576").End(xlUp).Offset(1, 0).Value = Cells(RG, 1)
                Sheet1.Range("F1048576").End(xlUp).Offset(1, 0).Value = Cells(RG, CG)
                
                'Sheet2.Range("C1048573").End(xlUp).Offset(1, 0).Value = Worksheets(I).Cells(c, 5)
                End If
            End If
          Next CG
        Next RG
    
    End Sub
    Private Sub SortLBLG()
    
        Application.Calculation = xlCalculationManual
    
        Application.ScreenUpdating = False
        
        Application.DisplayStatusBar = False
        
        Application.EnableEvents = False
    
        
        Range("A2:C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Clear
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Add Key:=Range("A3:A560") _
            , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Add Key:=Range("B3:B560") _
            , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        With ActiveWorkbook.Worksheets("Sheet1").Sort
            .SetRange Range("A2:C4000")
            .Header = xlYes
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
        Range("D2:F2").Select
        Range(Selection, Selection.End(xlDown)).Select
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Clear
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Add Key:=Range("D3:D560") _
            , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Add Key:=Range("E3:E560") _
            , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        With ActiveWorkbook.Worksheets("Sheet1").Sort
            .SetRange Range("D2:F4000")
            .Header = xlYes
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
        Range("E4").Select
        
            Application.Calculation = xlCalculationAutomatic
    
        Application.ScreenUpdating = True
        
        Application.DisplayStatusBar = True
        
        Application.EnableEvents = True
    End Sub


    Private Sub LURawTextLookUp()
    
            Sheets("Raw Data").Activate
            Dim lrow As Integer, lCol As Integer, R As Integer, C As Integer
    
        
            'Find the last non-blank cell in column A(1)
            lrow = Cells(Rows.Count, 2).End(xlUp).Row
            
            'Find the last non-blank cell in row 1
            lCol = Cells(4, Columns.Count).End(xlToLeft).Column
        
             For R = 5 To lrow
             For C = 3 To lCol
             
                If Cells(4, C).Value >= dateRng Then
                
                    If Application.WorksheetFunction.IsText(Cells(R, C).Value) = True Then
                    'Application.WorksheetFunction.IsNumber
                    'Application.WorksheetFunction.IsText(Cells(R, C).Value) = True
                    'IsEmpty(Cells(R, C).Value) = False
                    
                    Sheet8.Range("D1048576").End(xlUp).Offset(1, 0).Value = "Existing BSM"
                    Sheet8.Range("E1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                    Sheet8.Range("F1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                    Sheet8.Range("G1048576").End(xlUp).Offset(1, 0).Value = 0
                    Sheet8.Range("K1048576").End(xlUp).Offset(1, 0).Value = Cells(4, C)
                    Sheet8.Range("J1048576").End(xlUp).Offset(1, 0).Value = Cells(R, C)
                    Sheet8.Range("L1048576").End(xlUp).Offset(1, 0).Value = 0.583333333
                    
                    'Sheet2.Range("C1048573").End(xlUp).Offset(1, 0).Value = Worksheets(I).Cells(c, 5)
                    End If
                
                End If
                
              Next C
            Next R
         
    End Sub

    Private Sub LURawNumLookup()
    
            Sheets("Raw Data").Activate
            Dim lrow As Integer, lCol As Integer, R As Integer, C As Integer
    
        
            'Find the last non-blank cell in column A(1)
            lrow = Cells(Rows.Count, 2).End(xlUp).Row
            
            'Find the last non-blank cell in row 1
            lCol = Cells(4, Columns.Count).End(xlToLeft).Column
        
             For R = 5 To lrow
             For C = 3 To lCol
             
                If Cells(4, C).Value >= dateRng Then
                
                    If Application.WorksheetFunction.IsNumber(Cells(R, C).Value) = True Then
                    'Application.WorksheetFunction.IsNumber
                    'Application.WorksheetFunction.IsText(Cells(R, C).Value) = True
                    'IsEmpty(Cells(R, C).Value) = False
                    
                    Sheet1.Range("A1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                    Sheet1.Range("B1048576").End(xlUp).Offset(1, 0).Value = Cells(4, C)
                    Sheet1.Range("C1048576").End(xlUp).Offset(1, 0).Value = Cells(R, C)
                    
                    'Sheet2.Range("C1048573").End(xlUp).Offset(1, 0).Value = Worksheets(I).Cells(c, 5)
                    End If
                
                End If
                
              Next C
            Next R
    
    End Sub

    Private Sub LUGraphNumLookup()
    
        Sheets("TEMS Data").Activate
        'OR RAW DATA
        Dim lrow As Integer, lCol As Integer, R As Integer, C As Integer
    
    
        'Find the last non-blank cell in column B from bottom
        lrow = Cells(Rows.Count, 2).End(xlUp).Row
        
        'Find the last non-blank cell in row 4 from right
        lCol = Cells(4, Columns.Count).End(xlToLeft).Column
    
         For R = 5 To lrow
         For C = 3 To lCol
                If Cells(4, C).Value >= dateRng Then
                    If Application.WorksheetFunction.IsNumber(Cells(R, C).Value) = True Then
                   
                    Sheet1.Range("A1048576").End(xlUp).Offset(1, 0).Value = Cells(R, 2)
                    Sheet1.Range("B1048576").End(xlUp).Offset(1, 0).Value = Cells(4, C)
                    Sheet1.Range("C1048576").End(xlUp).Offset(1, 0).Value = Cells(R, C)
                    
                End If
                End If
              Next C
            Next R
    
    End Sub

    Private Sub UserForm_Initialize()
    
        Dim Sh As Variant
        'for each loop the add visible sheets
        For Each Sh In ThisWorkbook.Sheets
            'only visible sheetand exclude login sheet
            If Sh.Visible = True Then
                'add sheets to the listbox
                Me.lbShtSelection.AddItem Sh.Name
            End If
        Next Sh
    
    End Sub
